// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  username         String    @unique
  email            String    @unique
  fullName         String
  password         String
  profile_picture  String?
  posts            Post[]    @relation("UserPosts")
  follows          String[]
  followers        String[]
  liked            String[]
  createdAt        DateTime  @default(now())
  messagesSent     Message[] @relation("SentMessages")
  messagesRecieved Message[] @relation("ReceivedMessages")
}


model Post {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  caption         String
  image_url       String
  likes           Int
  author_username String
  author          User      @relation("UserPosts", fields: [author_username], references: [username])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  comments        Comment[] @relation("PostComments")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  username  String
  timestamp DateTime @default(now())
  postId    String   @db.ObjectId
  post      Post     @relation("PostComments", fields: [postId], references: [id])
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   String   @db.ObjectId
  reciever   User     @relation("ReceivedMessages", fields: [recieverId], references: [id])
  recieverId String   @db.ObjectId
  createdAt  DateTime @default(now())
}
